// <auto-generated />
using System;
using ExpensePilot.Services.ExpenseAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpensePilot.Services.ExpenseAPI.Migrations
{
    [DbContext(typeof(ExpenseDbContext))]
    [Migration("20240930054921_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpensePilot.Services.ExpenseAPI.Models.Domain.Expense", b =>
                {
                    b.Property<int>("ExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ExpenseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceReceiptID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceVendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseID");

                    b.HasIndex("InvoiceReceiptID")
                        .IsUnique();

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpensePilot.Services.ExpenseAPI.Models.Domain.InvoiceReceipt", b =>
                {
                    b.Property<int>("ReceiptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptID"));

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptID");

                    b.ToTable("InvoiceReceipts");
                });

            modelBuilder.Entity("ExpensePilot.Services.ExpenseAPI.Models.Domain.Expense", b =>
                {
                    b.HasOne("ExpensePilot.Services.ExpenseAPI.Models.Domain.InvoiceReceipt", "InvoiceReceipt")
                        .WithOne("Expense")
                        .HasForeignKey("ExpensePilot.Services.ExpenseAPI.Models.Domain.Expense", "InvoiceReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceReceipt");
                });

            modelBuilder.Entity("ExpensePilot.Services.ExpenseAPI.Models.Domain.InvoiceReceipt", b =>
                {
                    b.Navigation("Expense")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
